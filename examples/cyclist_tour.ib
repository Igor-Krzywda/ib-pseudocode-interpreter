method hashmap_init(HASHMAP, Cyclist_time)
    HASHMAP.emplace(Cyclist->NAME, Cycylist->TIME) 
end method

method top_times(TIMES, TOP_LEN)
    LEN = TIMES.length - 1
    MIN_INDEX = 0
    FASTEST = Array(TOP_LEN)
    loop I from 0 to TOP_LEN - 1
        MIN_TIME = TIMES[I]
        loop J from I + 1 to LEN 
            if TIMES[J] < MIN_TIME then 
                MIN_INDEX = J
            end if
        end loop
    TEMP = TIMES[I]
    TIMES[I] = TIMES[MIN_INDEX]
    TIMES[MIN_INDEX] = TEMP   
    FASTEST[I] = TIMES[MIN_INDEX]
    end loop
end method

method decode_leaderboard(LEADERBOARD, HASHMAP)
    LEN = LEADERBOARD.length()
    loop I from 0 to LEN
        if (OUT_STR = HASHMAP.find(LEADERBOARD[I]) > 0 then
            output OUT_STR, ":", LEADERBOARD[I]
        end if
    end loop
end method

structure Cyclist_time
    NAME
    TIME
end structure

TOP_TEN = top_ten(TIMES, 10)
decode_leaderboard(TOP_TEN, CYCLIST_HASH)

